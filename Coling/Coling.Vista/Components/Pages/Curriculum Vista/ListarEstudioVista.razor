@page "/estudios"
@inject IEstudioService servicioEstudio

<h3>Listar Estudios</h3>

<div class="form-group row">
    <div class="col-sm-10">
        <a href="/estudio/crear" class="btn btn-primary m-1">Agregar Nuevo</a>
    </div>
</div>

<div>
    <table class="table">
        <thead>
            <tr>
                <th><strong>Tipo Estudio</strong></th>
                <th><strong>Nombre Grado</strong></th>
                <th><strong>Titulo Recibido</strong></th>
                <th><strong>Nombre Institucion</strong></th>
                <th><strong>Anio</strong></th>
            </tr>
        </thead>
        @foreach (var item in estudios)
        {
            <tr>
                <td>@item.TipoEstudio</td>
                <td>@item.NombreGrado</td>
                <td>@item.TituloRecibido</td>
                <td>@item.NombreInstitucion</td>
                <td>@item.Anio</td>
            </tr>
        }
    </table>
</div>


@code {
    public List<Estudio> estudios { get; set; } = new List<Estudio>();

    protected override async Task OnInitializedAsync()
    {
        string token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c3VhcmlvIjoianVsaW8iLCJyb2wiOiJBZG1pbiIsImVzdGFkbyI6IkFjdGl2byIsImV4cCI6MTcxMjYzNzIzNH0.nO4ZauhDrulMTfZqxKssq68ajd1ZdANg42cV3uKjLTQ";
        var respuesta = await servicioEstudio.ListarEstudio(token);
        estudios = respuesta;
    }
    private void EditarInstitucion(string rowKey)
    {
    }

    private async Task BorrarInstitucion(string partitionKey, string rowKey)
    {
    }
}